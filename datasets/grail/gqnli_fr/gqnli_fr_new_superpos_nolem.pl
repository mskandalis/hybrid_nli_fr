sent(1, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(2, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(3, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(4, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(5, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(6, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(7, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(8, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(9, Result) :-
      prob_parse([ ex_si('Tout', det-pro:ind, 'Tout', [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(court, v-ver:pres, court, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(10, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(11, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(12, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(13, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(14, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(15, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(16, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(17, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(18, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(19, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(20, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(21, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(22, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(23, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(24, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(3, det-num, 3, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(pas, adv-adv, pas, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(25, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(26, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(27, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(28, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(29, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(30, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(31, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(32, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(33, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(34, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(35, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(36, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,np,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(sept, det-num, sept, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(37, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(38, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(39, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(un, pro-num, un, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(noirs, adj-adj, noirs, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(40, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(41, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(42, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(43, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(44, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(45, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(rouge, adj-adj, rouge, [dl(0,n,n)-1]), ex_si(court, adj-adj, court, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,np,txt)-1])], Result).
sent(46, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(47, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(48, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(49, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(50, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(51, Result) :-
      prob_parse([ ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(52, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(53, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(54, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(55, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(56, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(57, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(brun, adj-adj, brun, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(rouge, adj-adj, rouge, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(58, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(59, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(bruns, adj-adj, bruns, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chien, nc-nom, chien, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(verte, adj-adj, verte, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(60, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(chiens, nc-nom, chiens, [n-1]), ex_si(rouges, adj-adj, rouges, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,dl(1,s,s),n)-1]), ex_si(un, nc-num, un, [n-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,dl(0,n,n),n)-1]), ex_si(autre, pro-pro:ind, autre, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(61, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(62, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(63, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(64, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(65, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(66, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(citadin, nc-nom, citadin, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(67, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(68, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(69, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(70, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(71, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(72, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(73, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(74, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(75, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(76, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(77, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(78, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(79, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(80, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(81, Result) :-
      prob_parse([ ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(82, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(83, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(84, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(85, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(86, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(87, Result) :-
      prob_parse([ ex_si('Peu', adv-adv, 'Peu', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(peu, adv-adv, peu, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(88, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(89, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(90, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(91, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(92, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(93, Result) :-
      prob_parse([ ex_si('Aucun', det-pro:ind, 'Aucun', [dr(0,np,n)-1]), ex_si(garçon, nc-nom, garçon, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(94, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(95, Result) :-
      prob_parse([ ex_si('Pas', adv-adv, 'Pas', [dr(0,np,np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(96, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(97, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(98, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(99, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(100, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(101, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(102, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(103, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(toutes, adv-adv, toutes, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(104, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(105, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(106, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(107, Result) :-
      prob_parse([ ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(108, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(109, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(110, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(111, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pas, adv-adv, pas, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(112, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(113, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(114, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(115, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(116, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(117, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(118, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(119, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(les, det-det:art, les, [dr(0,dl(1,s,s),n)-1]), ex_si(uns, pro-pro, uns, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(autres, adj-adj, autres, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(120, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(121, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(122, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(123, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(124, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(125, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(126, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(127, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(128, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(129, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si('Américains', nc-nam, 'Américains', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(130, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(131, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(132, Result) :-
      prob_parse([ ex_si('Six', det-num, 'Six', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portant, vpr-ver:ppre, portant, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),dl(0,n,n))-1]), ex_si(debout, adv-adv, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(1,s,s),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(133, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(134, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(135, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),dl(0,n,n))-1]), ex_si(debout, adv-adv, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(1,s,s),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(136, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(137, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(138, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(139, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(140, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(141, Result) :-
      prob_parse([ ex_si('Quatre', det-num, 'Quatre', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(142, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(143, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(144, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(roses, nc-nom, roses, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(145, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(146, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(147, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, nc-nom, hauts, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(148, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(149, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(150, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(cinquième, nc-num, cinquième, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(151, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(152, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(153, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(154, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(155, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(156, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(5, det-num, 5, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(6, det-num, 6, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(157, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(158, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(159, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(80, det-num, 80, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(90, det-num, 90, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, adj-adj, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(160, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(161, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(162, Result) :-
      prob_parse([ ex_si('Beaucoup', adv-adv, 'Beaucoup', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, adj-adj, rouges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(163, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(164, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(rouges, nc-nom, rouges, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(verts, nc-nom, verts, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(165, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cheveux, nc-nom, cheveux, [n-1]), ex_si(roux, adj-adj, roux, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(166, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,np,np),n)-1]), ex_si('Cap-Vert', npp-nam, 'Cap-Vert', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(167, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(4, det-num, 4, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,np,s_ppart),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(168, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,np,np),n)-1]), ex_si('Cap-Vert', npp-nam, 'Cap-Vert', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(169, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,np,s_ppart),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(170, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,np,np),n)-1]), ex_si('Cap-Vert', npp-nam, 'Cap-Vert', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(171, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(172, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,np,np),n)-1]), ex_si('Cap-Vert', npp-nam, 'Cap-Vert', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(173, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(174, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Argentine', npp-nam, 'Argentine', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,np,np),n)-1]), ex_si('Cap-Vert', npp-nam, 'Cap-Vert', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(175, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Chili', npp-nam, 'Chili', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(176, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(177, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(178, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(179, Result) :-
      prob_parse([ ex_si('Certaines', det-pro:ind, 'Certaines', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(180, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(181, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(182, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(183, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(20, det-num, 20, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(184, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(185, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(400, det-num, 400, [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(186, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(187, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(majorité, nc-nom, majorité, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(188, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(189, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,dl(1,s,s),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(seuil, nc-nom, seuil, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(extrême, adj-adj, extrême, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(190, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(191, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si('Africains', nc-nam, 'Africains', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(192, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(193, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(quatre, adj-num, quatre, [dr(0,n,n)-1]), ex_si(cinquièmes, nc-nom, cinquièmes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(194, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(195, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(196, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(197, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(198, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(199, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(200, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Afrique', npp-nam, 'Afrique', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(201, Result) :-
      prob_parse([ ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(africaine, adj-adj, africaine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(richesse, nc-nom, richesse, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(202, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(203, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(204, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(205, Result) :-
      prob_parse([ ex_si('Le', det-det:art, 'Le', [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(situait, v-ver:impf, situait, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(entre, p-prp, entre, [dr(0,pp,np)-1]), ex_si(86, pro-num, 86, [np-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(87, pro-num, 87, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(206, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(207, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(monde, nc-nom, monde, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(208, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(209, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(210, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(211, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,dr(0,np,np),dr(0,np,np))-1]), ex_si(plus, adv-adv, plus, [dr(0,np,s_q)-1]), ex_si(que, cs-kon, que, [dr(0,s_q,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(212, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(213, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(214, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(215, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(216, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(217, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, det-prp:det, du, [dr(0,np,n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(218, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(219, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, det-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(220, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(221, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(222, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(jeunes, adj-adj, jeunes, [dr(0,n,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(caméra, nc-nom, caméra, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(jeune, adj-adj, jeune, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(223, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(rouge, nc-nom, rouge, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(224, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(225, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(226, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(227, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(228, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(229, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(230, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(231, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(232, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(233, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(234, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(235, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:pres, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(236, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(237, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(238, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(239, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(240, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(241, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(quatre, adj-num, quatre, [dr(0,np,n)-1]), ex_si(nettoyeurs, nc-nom, nettoyeurs, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(excréments, nc-nom, excréments, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(242, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(243, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(assoient, v-ver:pres, assoient, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(244, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(245, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(246, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(247, Result) :-
      prob_parse([ ex_si('Tout', det-pro:ind, 'Tout', [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(court, adj-adj, court, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(248, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(249, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(250, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(251, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(252, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(253, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(254, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(255, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(256, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(257, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(3, det-num, 3, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(assoient, v-ver:pres, assoient, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(258, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(259, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(260, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(261, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(262, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(263, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(264, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(265, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,np,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(sept, det-num, sept, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(266, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(267, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(un, pro-num, un, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(noirs, adj-adj, noirs, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(268, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(269, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(270, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(271, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(orange, adj-adj, orange, [dl(0,n,n)-1]), ex_si(court, v-ver:pres, court, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,np,txt)-1])], Result).
sent(272, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(273, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(274, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(275, Result) :-
      prob_parse([ ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(276, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(277, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(278, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(279, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(violet, adj-adj, violet, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(orange, adj-adj, orange, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(280, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(violets, adj-adj, violets, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(chat, nc-nom, chat, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(qui, prorel-pro:rel, qui, [dr(0,dl(0,n,n),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(grise, adj-adj, grise, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(281, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(chats, nc-nom, chats, [n-1]), ex_si(orange, adj-adj, orange, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(282, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(villes, nc-nom, villes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(283, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(284, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(toutes, adv-adv, toutes, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(villes, nc-nom, villes, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(285, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(286, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(287, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(citadin, nc-nom, citadin, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(288, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(289, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(290, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(291, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(292, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(293, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(294, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(295, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(296, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(297, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(298, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(299, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(300, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(301, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(302, Result) :-
      prob_parse([ ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(303, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(304, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(305, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(306, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(307, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(308, Result) :-
      prob_parse([ ex_si('Peu', adv-adv, 'Peu', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(paysans, nc-nom, paysans, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(peu, adv-adv, peu, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(citadins, nc-nom, citadins, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(309, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(310, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(311, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(312, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(313, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(314, Result) :-
      prob_parse([ ex_si('Aucun', det-pro:ind, 'Aucun', [dr(0,np,n)-1]), ex_si(mec, nc-nom, mec, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(315, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(316, Result) :-
      prob_parse([ ex_si('Pas', adv-adv, 'Pas', [dr(0,np,np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(317, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(318, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(319, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(320, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(321, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(322, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(323, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(324, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(toutes, adv-adv, toutes, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(325, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(326, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(327, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(328, Result) :-
      prob_parse([ ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(329, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(330, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(331, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(332, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(mecs, nc-nom, mecs, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pas, adv-adv, pas, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(dames, nc-nom, dames, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(333, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(334, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(335, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(336, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(337, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(338, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(339, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(340, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(les, det-det:art, les, [dr(0,dl(1,s,s),n)-1]), ex_si(uns, pro-pro, uns, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(autres, adj-adj, autres, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(341, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(342, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(343, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(344, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(345, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(346, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(347, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(348, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(349, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(350, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si('Européens', nc-nam, 'Européens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(351, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(12, det-num, 12, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adv, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(352, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(noirs, nc-nom, noirs, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(353, Result) :-
      prob_parse([ ex_si('Six', det-num, 'Six', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portant, vpr-ver:ppre, portant, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(au, p+d-prp:det, au, [dr(0,pp_a,n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(354, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(355, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(356, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(au, p+d-prp:det, au, [dr(0,pp_a,n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(357, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(358, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(359, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(360, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(361, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(362, Result) :-
      prob_parse([ ex_si('Quatre', det-num, 'Quatre', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(363, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(364, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(365, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(roses, nc-nom, roses, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(366, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(367, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(368, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, nc-nom, hauts, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(369, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(370, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(371, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(cinquième, nc-num, cinquième, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(372, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(373, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(374, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(375, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(376, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(377, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(5, det-num, 5, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(6, det-num, 6, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(378, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(379, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(380, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(80, det-num, 80, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(90, det-num, 90, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(381, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(382, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(383, Result) :-
      prob_parse([ ex_si('Beaucoup', adv-adv, 'Beaucoup', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(384, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(385, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(orange, nc-nom, orange, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(gris, nc-nom, gris, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(386, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cheveux, nc-nom, cheveux, [n-1]), ex_si(orange, adj-adj, orange, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(387, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si('Papouasie-Nouvelle-Guinée', npp-nam, 'Papouasie-Nouvelle-Guinée', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(388, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(4, det-num, 4, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(originaires, vpp-ver:pper, originaires, [dr(0,dl(0,np,s_ppart),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(389, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,s,s),s)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,s,dia(1,box(1,dr(0,dl(0,np,s),pp)))),dr(0,s,box(1,dia(1,dr(0,dl(0,np,s),pp))))),dr(0,s,dia(1,box(1,dr(0,dl(0,np,s),pp)))))-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si('Papouasie-Nouvelle-Guinée', npp-nam, 'Papouasie-Nouvelle-Guinée', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(390, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(391, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,s,s),s)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,s,dia(1,box(1,dr(0,dl(0,np,s),pp)))),dr(0,s,box(1,dia(1,dr(0,dl(0,np,s),pp))))),dr(0,s,dia(1,box(1,dr(0,dl(0,np,s),pp)))))-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si('Papouasie-Nouvelle-Guinée', npp-nam, 'Papouasie-Nouvelle-Guinée', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(392, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(393, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si('Papouasie-Nouvelle-Guinée', npp-nam, 'Papouasie-Nouvelle-Guinée', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(394, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(395, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si('Brésil', npp-nam, 'Brésil', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si('Papouasie-Nouvelle-Guinée', npp-nam, 'Papouasie-Nouvelle-Guinée', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(396, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Chili', npp-nam, 'Chili', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(397, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(398, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(majorité, nc-nom, majorité, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(399, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(400, Result) :-
      prob_parse([ ex_si('Certaines', det-pro:ind, 'Certaines', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(401, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(402, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(403, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(404, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(20, det-num, 20, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(405, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(406, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(400, det-num, 400, [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(407, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(408, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(409, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(410, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,dl(1,s,s),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(seuil, nc-nom, seuil, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(411, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(412, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(habitants, nc-nom, habitants, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(413, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(414, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(quatre, adj-num, quatre, [dr(0,n,n)-1]), ex_si(cinquièmes, nc-nom, cinquièmes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(415, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(416, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(417, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(418, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(419, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(420, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(421, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(422, Result) :-
      prob_parse([ ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(latine, adj-adj, latine, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(richesse, nc-nom, richesse, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(423, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(424, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(425, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(426, Result) :-
      prob_parse([ ex_si('Le', det-det:art, 'Le', [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(situait, v-ver:impf, situait, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(entre, p-prp, entre, [dr(0,pp,np)-1]), ex_si(86, pro-num, 86, [np-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(87, pro-num, 87, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(427, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(428, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(monde, nc-nom, monde, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(429, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(430, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(431, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(garçons, nc-nom, garçons, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(432, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(garçons, nc-nom, garçons, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,dr(0,np,np),dr(0,np,np))-1]), ex_si(plus, adv-adv, plus, [dr(0,np,s_q)-1]), ex_si(que, cs-kon, que, [dr(0,s_q,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(filles, nc-nom, filles, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Ukraine', npp-nam, 'Ukraine', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(433, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(434, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(de, det-prp, de, [dr(0,np,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(435, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(436, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(437, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(438, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(de, det-prp, de, [dr(0,np,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(439, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(440, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, det-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(441, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(442, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(443, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(âgés, adj-adj, âgés, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(table, nc-nom, table, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(âgé, vpp-ver:pper, âgé, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(444, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(de, det-prp, de, [dr(0,np,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(orange, nc-nom, orange, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(445, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(446, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(447, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(448, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(449, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(450, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(451, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(452, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:simp, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(453, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(454, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(455, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(456, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(457, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(458, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(459, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(460, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(461, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(462, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(assistants, nc-nom, assistants, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(déchets, nc-nom, déchets, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si(animaux, nc-nom, animaux, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(463, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(464, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(465, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(assoient, v-ver:pres, assoient, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(466, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(467, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(468, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(469, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(470, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(471, Result) :-
      prob_parse([ ex_si('Tout', adv-pro:ind, 'Tout', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(court, adj-adj, court, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(472, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(473, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(474, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(475, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(476, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(477, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(478, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(479, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(480, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(481, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(482, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(483, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(484, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(485, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(486, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(3, det-num, 3, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(assoient, v-ver:pres, assoient, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(487, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(488, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(489, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(490, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(491, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(492, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(est, v-ver:pres, est, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(493, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(494, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(495, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(496, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(497, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(498, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(sept, det-num, sept, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(499, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(500, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(501, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(un, pro-num, un, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noirs, adj-adj, noirs, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(502, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(503, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(504, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(505, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(506, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(507, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(beige, adj-adj, beige, [dl(0,n,n)-1]), ex_si(court, adj-adj, court, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,np,txt)-1])], Result).
sent(508, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(509, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(510, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(511, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(512, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(513, Result) :-
      prob_parse([ ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,np,s_pass))-1]), ex_si(assis, vpp-ver:pper, assis, [dl(0,np,s_pass)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(514, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(515, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(516, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(517, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(518, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(519, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(brun, adj-adj, brun, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(beige, adj-adj, beige, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(520, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(521, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(marron, adj-adj, marron, [dl(0,n,n)-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(noir, adj-adj, noir, [dl(0,n,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(blanc, adj-adj, blanc, [dl(0,n,n)-1]), ex_si(courent, v-ver:pres, courent, [dl(0,np,s)-1]), ex_si(le, det-det:art, le, [dr(0,dl(1,s,s),n)-1]), ex_si(long, nc-nom, long, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(herbe, nc-nom, herbe, [n-1]), ex_si(cyan, adj-adj, cyan, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(522, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(ours, nc-nom, ours, [n-1]), ex_si(beiges, adj-adj, beiges, [dl(0,n,n)-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(poursuivent, v-ver:pres, poursuivent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(523, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(524, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(525, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(526, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(527, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(528, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(villageois, nc-nom, villageois, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(citadin, nc-nom, citadin, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(529, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(530, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(531, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(532, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(533, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(534, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(535, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(536, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(537, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(certains, det-pro:ind, certains, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(538, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(539, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(540, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(tous, adv-adv, tous, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(541, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(542, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(543, Result) :-
      prob_parse([ ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(544, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(545, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(546, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(547, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(548, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(549, Result) :-
      prob_parse([ ex_si('Peu', adv-adv, 'Peu', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(footballeurs, nc-nom, footballeurs, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(peu, adv-adv, peu, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(nageurs, nc-nom, nageurs, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(détestent, v-ver:pres, détestent, [dl(0,cl_r,dl(0,np,s))-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(550, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(551, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(552, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(553, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(554, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(555, Result) :-
      prob_parse([ ex_si('Aucun', det-pro:ind, 'Aucun', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(556, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(557, Result) :-
      prob_parse([ ex_si('Pas', adv-adv, 'Pas', [dr(0,np,np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(558, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(559, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(560, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(561, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(poursuivi, vpp-ver:pper, poursuivi, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(562, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(563, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(564, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(565, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(toutes, adv-adv, toutes, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(566, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(567, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(types, nc-nom, types, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(568, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(569, Result) :-
      prob_parse([ ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(570, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(571, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(572, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(573, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(gars, nc-nom, gars, [n-1]), ex_si('n\'', adv-adv, 'n\'', [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),dl(0,np,s_ppart))-1]), ex_si(pas, adv-adv, pas, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(pourchassé, vpp-ver:pper, pourchassé, [dr(0,dl(0,np,s_ppart),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(écolières, nc-nom, écolières, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(salle, nc-nom, salle, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(classe, nc-nom, classe, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(574, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(575, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(576, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(577, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(578, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(579, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(580, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(581, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nom, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(les, p+d-det:art, les, [dr(0,dl(1,s,s),n)-1]), ex_si(uns, pro-pro, uns, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(autres, adj-adj, autres, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(582, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(583, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si('Canadiens', nc-nom, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(584, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(585, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(586, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(587, Result) :-
      prob_parse([ ex_si('Quelques', det-pro:ind, 'Quelques', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),n)-1]), ex_si('Amérique', npp-nam, 'Amérique', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(588, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(589, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(590, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(50, det-num, 50, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(mais, cc-kon, mais, [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(65, det-num, 65, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Canadiens', nc-nam, 'Canadiens', [n-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(591, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si('Canadiens', nc-nom, 'Canadiens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si('s\'', clr-pro:per, 's\'', [cl_r-1]), ex_si(inquiètent, v-ver:pres, inquiètent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(réchauffement, nc-nom, réchauffement, [n-1]), ex_si(climatique, adj-adj, climatique, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(592, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(12, det-num, 12, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adv, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(593, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [n-1]), ex_si(noirs, nc-nom, noirs, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(594, Result) :-
      prob_parse([ ex_si('Six', det-num, 'Six', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portant, vpr-ver:ppre, portant, [dr(0,dl(0,n,n),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,n,n))-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(1,s,s),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(595, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(596, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(597, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(au, p+d-prp:det, au, [dr(0,pp_a,n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(598, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(599, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(600, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, p+d-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(601, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(602, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(603, Result) :-
      prob_parse([ ex_si('Quatre', det-num, 'Quatre', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(604, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(605, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(606, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(roses, nc-nom, roses, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(607, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(608, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(609, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(tops, nc-nom, tops, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(610, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(611, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(612, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(cinquième, nc-num, cinquième, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(613, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(614, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(615, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(616, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(617, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(618, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(5, det-num, 5, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(6, det-num, 6, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(619, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(620, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(621, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(80, det-num, 80, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(90, det-num, 90, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(de, det-prp, de, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(622, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(623, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(624, Result) :-
      prob_parse([ ex_si('Beaucoup', adv-adv, 'Beaucoup', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, det-prp, de, [dr(0,pp_de,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(625, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(six, det-num, six, [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(debout, adj-adj, debout, [dl(0,n,n)-1]), ex_si(au, p+d-prp:det, au, [dr(0,dl(0,n,n),n)-1]), ex_si(sommet, nc-nom, sommet, [n-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,n,n),np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(montagne, nc-nom, montagne, [n-1]), ex_si(jaune, adj-adj, jaune, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(626, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(beiges, nc-nom, beiges, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,s,s),s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(des, det-prp:det, des, [dr(0,np,n)-1]), ex_si(hauts, adj-adj, hauts, [dr(0,n,n)-1]), ex_si(cyan, nc-nom, cyan, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(627, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(enfants, nc-nom, enfants, [n-1]), ex_si(ont, v-ver:pres, ont, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(cheveux, nc-nom, cheveux, [n-1]), ex_si(beiges, adj-adj, beiges, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(628, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(venant, vpr-ver:ppre, venant, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),n)-1]), ex_si('Indonésie', npp-nam, 'Indonésie', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(629, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(4, det-num, 4, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,n,n))-1]), ex_si(allemands, adj-adj, allemands, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(630, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(venant, vpr-ver:ppre, venant, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),n)-1]), ex_si('Indonésie', npp-nam, 'Indonésie', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(631, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),dl(0,n,n))-1]), ex_si(allemands, adj-adj, allemands, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(632, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(venant, vpr-ver:ppre, venant, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),n)-1]), ex_si('Indonésie', npp-nam, 'Indonésie', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(633, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(634, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(venant, vpr-ver:ppre, venant, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),n)-1]), ex_si('Indonésie', npp-nam, 'Indonésie', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(635, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(636, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(a, v-ver:pres, a, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(douze, det-num, douze, [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(sur, p-prp, sur, [dr(0,dl(0,np,np),n)-1]), ex_si(scène, nc-nom, scène, [n-1]), ex_si(',', ponct-pun, ',', [dr(0,dl(0,np,np),np)-1]), ex_si(moins, adv-adv, moins, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(venant, vpr-ver:ppre, venant, [dr(0,dl(0,n,n),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si('Allemagne', npp-nam, 'Allemagne', [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(un, pro-num, un, [np-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,dl(0,np,np),n)-1]), ex_si('Indonésie', npp-nam, 'Indonésie', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(637, Result) :-
      prob_parse([ ex_si('Plusieurs', det-pro:ind, 'Plusieurs', [dr(0,np,n)-1]), ex_si(chanteurs, nc-nom, chanteurs, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(viennent, v-ver:pres, viennent, [dr(0,dl(0,np,s),pp)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si('Chili', npp-nam, 'Chili', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(638, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(639, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(majorité, nc-nom, majorité, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(une, det-det:art, une, [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(640, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(641, Result) :-
      prob_parse([ ex_si('Certaines', det-pro:ind, 'Certaines', [dr(0,np,n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(extrême, adj-adj, extrême, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(642, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(643, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(644, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(645, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(20, det-num, 20, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(646, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(647, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(400, det-num, 400, [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(648, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(649, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(majorité, nc-nom, majorité, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(650, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(sa, det-det:pos, sa, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(651, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,dl(1,s,s),pp_de)-1]), ex_si(du, p+d-prp:det, du, [dr(0,pp_de,n)-1]), ex_si(seuil, nc-nom, seuil, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(extrême, adj-adj, extrême, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(652, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(653, Result) :-
      prob_parse([ ex_si('Tous', adv-adv, 'Tous', [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si('Australiens', nc-nam, 'Australiens', [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vivent, v-ver:pres, vivent, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(654, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(655, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(quatre, adj-num, quatre, [dr(0,n,n)-1]), ex_si(cinquièmes, nc-nom, cinquièmes, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si('Australiens', nc-nam, 'Australiens', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(656, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(657, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(deux, adj-num, deux, [dr(0,n,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(658, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(659, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(660, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(661, Result) :-
      prob_parse([ ex_si('Un', det-det:art, 'Un', [dr(0,np,n)-1]), ex_si(tiers, nc-nom, tiers, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(vit, v-ver:pres, vit, [dl(0,np,s)-1]), ex_si(pas, adv-adv, pas, [dl(1,s,s)-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(662, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si('2021,490', det-num, '2021,490', [dr(0,np,n)-1]), ex_si(millions, nc-nom, millions, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,np),n)-1]), ex_si(personnes, nc-nom, personnes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(0,np,np),n)-1]), ex_si('Australie', npp-nam, 'Australie', [n-1]), ex_si(vivent, v-ver:pres, vivent, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si(extrême, adj-adj, extrême, [dr(0,n,n)-1]), ex_si(pauvreté, nc-nom, pauvreté, [n-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(soit, cc-kon, soit, [dr(0,dl(0,np,np),np)-1]), ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(totale, adj-adj, totale, [dl(0,n,n)-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(663, Result) :-
      prob_parse([ ex_si(36, det-num, 36, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(population, nc-nom, population, [n-1]), ex_si(australienne, adj-adj, australienne, [dl(0,n,n)-1]), ex_si(vit, v-ver:pres, vit, [dr(0,dl(0,np,s),pp)-1]), ex_si(dans, p-prp, dans, [dr(0,pp,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(richesse, nc-nom, richesse, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(664, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(665, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(666, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(667, Result) :-
      prob_parse([ ex_si('Le', det-det:art, 'Le', [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si(hommes, nc-nom, hommes, [dl(0,n,n)-1]), ex_si('/', ponct-sym, '/', [dr(0,dl(0,n,n),n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(situait, v-ver:impf, situait, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(entre, p-prp, entre, [dr(0,pp,np)-1]), ex_si(86, pro-num, 86, [np-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,np,np),np)-1]), ex_si(87, pro-num, 87, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(668, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(669, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(dans, p-prp, dans, [dr(0,dl(1,s,s),np)-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(monde, nc-nom, monde, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(670, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(671, Result) :-
      prob_parse([ ex_si('Il', cls-pro:per, 'Il', [np-1]), ex_si(y, clo-pro:per, y, [cl_y-1]), ex_si(avait, v-ver:impf, avait, [dr(0,dl(0,cl_y,dl(0,np,s)),np)-1]), ex_si(plus, adv-adv, plus, [dr(0,dr(0,np,s_q),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(que, cs-kon, que, [dr(0,s_q,pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(672, Result) :-
      prob_parse([ ex_si('En', p-prp, 'En', [dr(0,dr(0,s,s),np)-1]), ex_si(2020, pro-num, 2020, [np-1]), ex_si(',', ponct-pun, ',', [let-1]), ex_si(le, det-det:art, le, [dr(0,np,n)-1]), ex_si(ratio, nc-nom, ratio, [n-1]), ex_si('hommes-femmes', adj-adj, 'hommes-femmes', [dl(0,n,n)-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,n,n),np)-1]), ex_si('l\'', det-det:art, 'l\'', [dr(0,np,n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si(était, v-ver:impf, était, [dr(0,dl(0,np,s),pp)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si('86,33', det-num, '86,33', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(pour, p-prp, pour, [dr(0,dl(0,np,np),np)-1]), ex_si(100, det-num, 100, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(673, Result) :-
      prob_parse([ ex_si('Les', det-det:art, 'Les', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,dr(0,np,np),dr(0,np,np))-1]), ex_si(plus, adv-adv, plus, [dr(0,np,s_q)-1]), ex_si(que, cs-kon, que, [dr(0,s_q,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(femmes, nc-nom, femmes, [n-1]), ex_si(en, p-prp, en, [dr(0,dl(1,s,s),n)-1]), ex_si('Ouzbékistan', npp-nam, 'Ouzbékistan', [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(674, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(675, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(676, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(677, Result) :-
      prob_parse([ ex_si('Certains', det-pro:ind, 'Certains', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(ne, adv-adv, ne, [dr(0,dl(0,np,s),dl(0,np,s))-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(pas, adv-adv, pas, [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(678, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(679, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, det-prp:det, du, [dr(0,np,n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(680, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(681, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(trois, det-num, trois, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, det-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(682, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(683, Result) :-
      prob_parse([ ex_si('La', det-det:art, 'La', [dr(0,np,n)-1]), ex_si(plupart, nc-nom, plupart, [dr(0,n,pp_de)-1]), ex_si(des, p+d-prp:det, des, [dr(0,pp_de,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(684, Result) :-
      prob_parse([ ex_si('Deux', det-num, 'Deux', [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(adultes, adj-adj, adultes, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(bleu, nc-nom, bleu, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tiennent, v-ver:pres, tiennent, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si('au-dessus', p-prp, 'au-dessus', [dr(0,pp_a,pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(poêle, nc-nom, poêle, [n-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dl(0,np,s),dl(0,np,s)),dl(0,np,s))-1]), ex_si(regardent, v-ver:pres, regardent, [dr(0,dl(0,np,s),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(porte, nc-nom, porte, [n-1]), ex_si(tandis, cs-kon, tandis, [dr(0,dl(1,s,s),s_q)-1]), ex_si('qu\'', cs-kon, 'qu\'', [dr(0,s_q,s)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(autre, adj-adj, autre, [dr(0,n,n)-1]), ex_si(homme, nc-nom, homme, [n-1]), ex_si(adulte, adj-adj, adulte, [dl(0,n,n)-1]), ex_si(en, p-prp, en, [dr(0,dl(0,n,n),n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si(se, clr-pro:per, se, [cl_r-1]), ex_si(tient, v-ver:pres, tient, [dr(0,dl(0,cl_r,dl(0,np,s)),pp)-1]), ex_si(derrière, p-prp, derrière, [dr(0,pp,np)-1]), ex_si(eux, pro-pro:per, eux, [np-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(685, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,np,np),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(hommes, nc-nom, hommes, [n-1]), ex_si(portent, v-ver:pres, portent, [dr(0,dl(0,np,s),np)-1]), ex_si(du, p+d-prp:det, du, [dr(0,np,n)-1]), ex_si(beige, nc-nom, beige, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(686, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(687, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(688, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(689, Result) :-
      prob_parse([ ex_si('Entre', p-prp, 'Entre', [dr(0,dr(0,s,s),np)-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(et, cc-kon, et, [dr(0,dl(0,dr(0,np,n),dr(0,np,n)),dr(0,np,n))-1]), ex_si(cinq, det-num, cinq, [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(690, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(691, Result) :-
      prob_parse([ ex_si('Moins', adv-adv, 'Moins', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(deux, det-num, deux, [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(692, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(693, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(toutes, adv-adv, toutes, [dr(0,np,np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(694, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(695, Result) :-
      prob_parse([ ex_si('Trois', det-num, 'Trois', [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(du, p+d-prp:det, du, [dr(0,dl(0,n,n),n)-1]), ex_si(zoo, nc-nom, zoo, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(696, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(697, Result) :-
      prob_parse([ ex_si(60, det-num, 60, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(698, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(699, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(30, det-num, 30, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(700, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(701, Result) :-
      prob_parse([ ex_si('Plus', adv-adv, 'Plus', [dr(0,np,pp_de)-1]), ex_si(de, p-prp, de, [dr(0,pp_de,np)-1]), ex_si(40, det-num, 40, [dr(0,np,n)-1]), ex_si('%', nc-sym, '%', [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balayent, v-ver:pres, balayent, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(702, Result) :-
      prob_parse([ ex_si('Seulement', adv-adv, 'Seulement', [dr(0,np,np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(moitié, nc-nom, moitié, [n-1]), ex_si(des, p+d-prp:det, des, [dr(0,dl(0,n,n),n)-1]), ex_si(six, adj-num, six, [dr(0,n,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(balaient, v-ver:impf, balaient, [dr(0,dl(0,np,s),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),np)-1]), ex_si(la, det-det:art, la, [dr(0,np,n)-1]), ex_si(rue, nc-nom, rue, [n-1]), ex_si(lors, adv-adv, lors, [dr(0,dl(1,s,s),pp_de)-1]), ex_si('d\'', p-prp, 'd\'', [dr(0,pp_de,np)-1]), ex_si(un, det-det:art, un, [dr(0,np,n)-1]), ex_si(défilé, nc-nom, défilé, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
sent(703, Result) :-
      prob_parse([ ex_si('Au', p+d-prp:det, 'Au', [dr(0,dr(0,s,s),n)-1]), ex_si(moins, adv-adv, moins, [n-1]), ex_si(quatre, det-num, quatre, [dr(0,np,n)-1]), ex_si(bénévoles, nc-nom, bénévoles, [n-1]), ex_si(sont, v-ver:pres, sont, [dr(0,dl(0,np,s),pp)-1]), ex_si(en, p-prp, en, [dr(0,pp,n)-1]), ex_si(train, nc-nom, train, [dr(0,n,dl(0,np,s_inf))-1]), ex_si(de, p-prp, de, [dr(0,dl(0,np,s_inf),dl(0,np,s_inf))-1]), ex_si(balayer, vinf-ver:infi, balayer, [dr(0,dl(0,np,s_inf),np)-1]), ex_si(les, det-det:art, les, [dr(0,np,n)-1]), ex_si(canettes, nc-nom, canettes, [n-1]), ex_si(de, p-prp, de, [dr(0,dl(0,n,n),n)-1]), ex_si(bière, nc-nom, bière, [n-1]), ex_si('.', ponct-pun, '.', [dl(0,s,txt)-1])], Result).
