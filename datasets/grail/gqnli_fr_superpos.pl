:- dynamic sent/2.

sent(1, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(2, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(3, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(4, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(5, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(6, Result) :-
    prob_parse([ si('Tout', pro:ind, tout, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(court, adj, court, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(7, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(8, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(9, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(10, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(11, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(12, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(13, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(14, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(15, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(16, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(3, num, 3, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(pas, adv, pas, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(17, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(18, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(19, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(20, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(21, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(22, Result) :-
    prob_parse([ si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(23, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(24, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, np, np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(sept, num, sept, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(25, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(26, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(un, num, un, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(noirs, adj, noir, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(27, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(29, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(30, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(rouge, adj, rouge, [dl(0, n, n)-1]),
                 si(court, adj, court, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, np, txt)-1])
               ],
               Result).
sent(31, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(32, Result) :-
    prob_parse([ si(60, num, 60, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(33, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(34, Result) :-
    prob_parse([ si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(35, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(36, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(37, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(38, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(brun, adj, brun, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(rouge, adj, rouge, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(39, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(bruns, adj, brun, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chien, nom, chien, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(verte, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(40, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(chiens, nom, chien, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('l\'', det:art, 'l\'', [dr(0, dl(1, s, s), n)-1]),
                 si(un, nom, un, [n-1]),
                 si('l\'', det:art, 'l\'', [dr(0, dl(0, n, n), n)-1]),
                 si(autre, adj, autre, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(101, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(102, Result) :-
    prob_parse([ si('Six', num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portant, ver:ppre, porter, [dr(0, dl(0, n, n), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(tiennent,
                    ver:pres,
                    tenir,
                    [dr(0, dl(0, cl_r, dl(0, np, s)), dl(0, n, n))-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(1, s, s), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(103, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(105, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(107, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(108, Result) :-
    prob_parse([ si('Quatre', num, quatre, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(109, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(110, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(roses, nom, rose, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(111, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(112, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(113, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(115, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(116, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(117, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(118, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(5, num, 5, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(6, num, 6, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(119, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(120, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(80, num, 80, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(90, num, 90, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(121, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(122, Result) :-
    prob_parse([ si('Beaucoup', adv, beaucoup, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(123, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(rouges, adj, rouge, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(verts, adj, vert, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(124, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(cheveux, nom, cheveu, [n-1]),
                 si(roux, adj, roux, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(126, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(4, num, 4, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(originaires,
                    adj,
                    originaire,
                    [dr(0, dl(0, np, s_ppart), pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Argentine', nom, argentin, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(128, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(originaires,
                    adj,
                    originaire,
                    [dr(0, dl(0, np, s_ppart), pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Argentine', nom, argentin, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(130, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Argentine', nom, argentin, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(132, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Argentine', nom, argentin, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(134, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Chili', nam, 'Chili', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(160, Result) :-
    prob_parse([ si(36, num, 36, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(population, nom, population, [n-1]),
                 si(africaine, adj, africain, [dl(0, n, n)-1]),
                 si(vit, ver:pres, vivre, [dr(0, dl(0, np, s), pp)-1]),
                 si(dans, prp, dans, [dr(0, pp, np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(richesse, nom, richesse, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(162, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ukraine', nam, 'Ukraine', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(164, Result) :-
    prob_parse([ si('Le', det:art, le, [dr(0, np, n)-1]),
                 si(ratio, nom, ratio, [n-1]),
                 si('hommes-femmes', adj, 'hommes-femmes', [dl(0, n, n)-1]),
                 si(pour, prp, pour, [dr(0, dl(0, n, n), np)-1]),
                 si(100, num, 100, [dr(0, np, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(en, prp, en, [dr(0, dl(0, n, n), n)-1]),
                 si('Ukraine', nam, 'Ukraine', [n-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(situait,
                    ver:impf,
                    situer,
                    [dr(0, dl(0, cl_r, dl(0, np, s)), pp)-1]),
                 si(entre, prp, entre, [dr(0, pp, np)-1]),
                 si(86, num, 86, [np-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si('.', sent, '.', [np-1]),
                 si('87.', int, '87.', [dl(0, s, txt)-1])
               ],
               Result).
sent(166, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(le, det:art, le, [dr(0, np, n)-1]),
                 si(monde, nom, monde, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(168, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ukraine', nam, 'Ukraine', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(170, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dr(0, dr(0, np, np), dr(0, np, np))-1]),
                 si(plus, adv, plus, [dr(0, np, s_q)-1]),
                 si(que, kon, que, [dr(0, s_q, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ukraine', nam, 'Ukraine', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(174, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(bleu, nom, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(176, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(rouge, adj, rouge, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(178, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(180, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(182, Result) :-
    prob_parse([ si('Au', prp:det, au, [dr(0, dr(0, np, np), n)-1]),
                 si(moins, adv, moins, [n-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(rouge, adj, rouge, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(201, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(202, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si('s\'', pro:per, 's\'', [cl_r-1]),
                 si(assoient, ver:pres, asseoir, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(203, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(204, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(205, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(206, Result) :-
    prob_parse([ si('Tout', pro:ind, tout, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(court, adj, court, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(207, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(208, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(209, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(210, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(211, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(212, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(213, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(214, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(215, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(216, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(3, num, 3, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si('s\'', pro:per, 's\'', [cl_r-1]),
                 si(assoient, ver:pres, asseoir, [dl(0, cl_r, dl(0, np, s))-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(217, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(218, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(219, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(220, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(221, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(222, Result) :-
    prob_parse([ si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(223, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(224, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, np, np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(sept, num, sept, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(225, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(226, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(un, num, un, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(noirs, adj, noir, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(227, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(229, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(230, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(orange, adj, orange, [dl(0, n, n)-1]),
                 si(court, adj, court, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, np, txt)-1])
               ],
               Result).
sent(231, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(232, Result) :-
    prob_parse([ si(60, num, 60, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(233, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(234, Result) :-
    prob_parse([ si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(235, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(236, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(237, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(238, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(violet, adj, violet, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(orange, adj, orange, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(239, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(violets, adj, violet, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(chat, nom, chat, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(qui, pro:rel, qui, [dr(0, dl(0, n, n), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(grise, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(240, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(chats, nom, chat, [n-1]),
                 si(orange, adj, orange, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(259, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(260, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(261, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(262, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(263, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(264, Result) :-
    prob_parse([ si('Aucun', pro:ind, aucun, [dr(0, np, n)-1]),
                 si(mec, nom, mec, [n-1]),
                 si('n\'', adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(265, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(266, Result) :-
    prob_parse([ si('Pas', adv, pas, [dr(0, np, np)-1]),
                 si(moins, adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(267, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(268, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(269, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(270, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(plus, adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(271, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(272, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(moins, adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(273, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(274, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(toutes, pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(275, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(276, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(277, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(278, Result) :-
    prob_parse([ si(100, num, 100, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(279, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(280, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(281, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(282, Result) :-
    prob_parse([ si('Quelques', pro:ind, quelque, [dr(0, np, n)-1]),
                 si(mecs, nom, mec, [n-1]),
                 si('n\'', adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(pas, adv, pas, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(poursuivi,
                    ver:pper,
                    poursuivre,
                    [dr(0, dl(0, np, s_ppart), np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(dames, nom, dame, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(salle, nom, salle, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si(classe, nom, classe, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(301, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(12, num, 12, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(gris, nom, gri, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(noirs, adj, noir, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(302, Result) :-
    prob_parse([ si('Six', num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portant, ver:ppre, porter, [dr(0, dl(0, n, n), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(tiennent,
                    ver:pres,
                    tenir,
                    [dr(0, dl(0, cl_r, dl(0, np, s)), pp)-1]),
                 si(au, prp:det, au, [dr(0, pp_a, n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(303, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(305, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(307, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(308, Result) :-
    prob_parse([ si('Quatre', num, quatre, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(309, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(310, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(roses, nom, rose, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(311, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(312, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(313, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(315, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(316, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(317, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(318, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(5, num, 5, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(6, num, 6, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(319, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(320, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(80, num, 80, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(90, num, 90, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(orange, nom, orange, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(321, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(322, Result) :-
    prob_parse([ si('Beaucoup', adv, beaucoup, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(323, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(orange, nom, orange, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(gris, adj, gris, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(324, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(cheveux, nom, cheveu, [n-1]),
                 si(orange, adj, orange, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(326, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(4, num, 4, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_ppart))-1]),
                 si(originaires,
                    adj,
                    originaire,
                    [dr(0, dl(0, np, s_ppart), pp_de)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Brésil', nam, 'Brésil', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(328, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Brésil', nam, 'Brésil', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(330, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Brésil', nam, 'Brésil', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(332, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Brésil', nam, 'Brésil', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(334, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Chili', nam, 'Chili', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(360, Result) :-
    prob_parse([ si(36, num, 36, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(population, nom, population, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), n)-1]),
                 si('Amérique', nam, 'Amérique', [n-1]),
                 si(latine, adj, latin, [dl(0, n, n)-1]),
                 si(vit, ver:pres, vivre, [dr(0, dl(0, np, s), pp)-1]),
                 si(dans, prp, dans, [dr(0, pp, np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(richesse, nom, richesse, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(374, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(bleu, nom, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(376, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(de, prp, de, [dr(0, np, np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(orange, nom, orange, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(378, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(380, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(382, Result) :-
    prob_parse([ si('Au', prp:det, au, [dr(0, dr(0, np, np), n)-1]),
                 si(moins, adv, moins, [n-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(de, prp, de, [dr(0, np, np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(orange, nom, orange, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(401, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(402, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('s\'', pro:per, 's\'', [cl_r-1]),
                 si(assoient, ver:pres, asseoir, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(403, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(404, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(405, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(406, Result) :-
    prob_parse([ si('Tout', pro:ind, tout, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(court, adj, court, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(407, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(408, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(409, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(410, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(411, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(412, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(413, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(414, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(415, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(416, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(3, num, 3, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si('s\'', pro:per, 's\'', [cl_r-1]),
                 si(assoient, ver:pres, asseoir, [dl(0, cl_r, dl(0, np, s))-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(417, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(418, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(419, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(420, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(est, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(421, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(422, Result) :-
    prob_parse([ si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(423, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(424, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(sept, num, sept, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(425, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(426, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(un, num, un, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noirs, adj, noir, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(427, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(429, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(430, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(beige, adj, beige, [dl(0, n, n)-1]),
                 si(court, adj, court, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, np, txt)-1])
               ],
               Result).
sent(431, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(432, Result) :-
    prob_parse([ si(60, num, 60, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(433, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(434, Result) :-
    prob_parse([ si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, np, s_pass))-1]),
                 si(assis, ver:pper, asseoir, [dl(0, np, s_pass)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(435, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(436, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(40, num, 40, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(437, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(438, Result) :-
    prob_parse([ si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(brun, adj, brun, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(beige, adj, beige, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(439, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si('.', sent, '.', [dr(0, dl(0, np, s), s)-1]),
                 si('Trois', num, trois, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(marron, adj, marron, [dl(0, n, n)-1]),
                 si(',', pun, ',', [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(noir, adj, noir, [dl(0, n, n)-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(blanc, adj, blanc, [dl(0, n, n)-1]),
                 si(courent, ver:pres, courir, [dl(0, np, s)-1]),
                 si(le, det:art, le, [dr(0, dl(1, s, s), n)-1]),
                 si(long, nom, long, [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si('l\'', det:art, 'l\'', [dr(0, np, n)-1]),
                 si(herbe, nom, herbe, [n-1]),
                 si(cyan, adj, cyan, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(440, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(ours, nom, ours, [n-1]),
                 si(beiges, adj, beige, [dl(0, n, n)-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(poursuivent, ver:pres, poursuivre, [dl(0, cl_r, dl(0, np, s))-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(501, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(12, num, 12, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Un', det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(beiges, adj, beige, [dr(0, dl(0, s, s), s)-1]),
                 si(',', pun, ',', [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(cyan, nom, cyan, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [n-1]),
                 si(noirs, adj, noir, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(502, Result) :-
    prob_parse([ si('Six', num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portant, ver:ppre, porter, [dr(0, dl(0, n, n), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(beiges, adj, beige, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, n, n))-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(1, s, s), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(503, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(505, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(507, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(508, Result) :-
    prob_parse([ si('Quatre', num, quatre, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(beiges, adj, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(509, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(510, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(roses, nom, rose, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(511, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(512, Result) :-
    prob_parse([ si('Tous', pro:ind, tout, [dr(0, np, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(tops, nom, top, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(513, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(515, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(516, Result) :-
    prob_parse([ si('Moins', adv, moins, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(cinq, num, cinq, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(beiges, adj, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(517, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(518, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(5, num, 5, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(6, num, 6, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(beiges, adj, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(519, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(520, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(80, num, 80, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si(90, num, 90, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, np, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(beiges, nom, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(521, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(522, Result) :-
    prob_parse([ si('Beaucoup', adv, beaucoup, [dr(0, np, pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(hauts, adj, haut, [dr(0, n, n)-1]),
                 si(beiges, nom, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(523, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(a, ver:pres, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(six, num, six, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(debout, adv, debout, [dl(0, n, n)-1]),
                 si(au, prp:det, au, [dr(0, dl(0, n, n), n)-1]),
                 si(sommet, nom, sommet, [n-1]),
                 si('d\'', prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(une, det:art, un, [dr(0, np, n)-1]),
                 si(montagne, nom, montagne, [n-1]),
                 si(jaune, adj, jaune, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dr(0, dl(0, s, s), s)-1]),
                 si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, n, n)-1]),
                 si(hauts, adj, haut, [n-1]),
                 si(beiges, nom, beige, [n-1]),
                 si(et, kon, et, [dr(0, dl(0, s, s), s)-1]),
                 si(un, det:art, un, [dr(0, np, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(des, prp:det, des, [dr(0, np, n)-1]),
                 si(hauts, nom, haut, [dr(0, n, n)-1]),
                 si(cyan, adj, cyan, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(524, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(enfants, nom, enfant, [n-1]),
                 si(ont, ver:pres, avoir, [dr(0, dl(0, np, s), np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(cheveux, nom, cheveu, [n-1]),
                 si(beiges, adj, beige, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(526, Result) :-
    prob_parse([ si('Plus', adv, plus, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, np)-1]),
                 si(4, num, 4, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, n, n))-1]),
                 si(allemands, adj, allemand, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(528, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(deux, num, deux, [dr(0, n, n)-1]),
                 si(tiers, nom, tiers, [n-1]),
                 si(des, prp:det, des, [dr(0, dl(0, n, n), n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), dl(0, n, n))-1]),
                 si(allemands, adj, allemand, [dl(0, n, n)-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(530, Result) :-
    prob_parse([ si('Deux', num, deux, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Allemagne', nam, 'Allemagne', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(532, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si('Allemagne', nam, 'Allemagne', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(534, Result) :-
    prob_parse([ si('Plusieurs', pro:ind, plusieurs, [dr(0, np, n)-1]),
                 si(chanteurs, nom, chanteur, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(viennent, ver:pres, venir, [dr(0, dl(0, np, s), pp)-1]),
                 si(pas, adv, pas, [dl(1, s, s)-1]),
                 si(du, prp:det, du, [dr(0, pp_de, n)-1]),
                 si('Chili', nam, 'Chili', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(560, Result) :-
    prob_parse([ si(36, num, 36, [dr(0, np, n)-1]),
                 si('%', sym, '%', [n-1]),
                 si(de, prp, de, [dr(0, dl(0, n, n), np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(population, nom, population, [n-1]),
                 si(australienne, adj, australien, [dl(0, n, n)-1]),
                 si(vit, ver:pres, vivre, [dr(0, dl(0, np, s), pp)-1]),
                 si(dans, prp, dans, [dr(0, pp, np)-1]),
                 si(la, det:art, la, [dr(0, np, n)-1]),
                 si(richesse, nom, richesse, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(562, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ouzbékistan', nam, 'Ouzbékistan', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(564, Result) :-
    prob_parse([ si('Le', det:art, le, [dr(0, np, n)-1]),
                 si(ratio, nom, ratio, [n-1]),
                 si(hommes, nom, homme, [dl(0, n, n)-1]),
                 si(/, pun, /, [dr(0, dl(0, n, n), n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(pour, prp, pour, [dr(0, dl(0, n, n), np)-1]),
                 si(100, num, 100, [dr(0, np, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(se, pro:per, se, [cl_r-1]),
                 si(situait,
                    ver:impf,
                    situer,
                    [dr(0, dl(0, cl_r, dl(0, np, s)), pp)-1]),
                 si(entre, prp, entre, [dr(0, pp, np)-1]),
                 si(86, num, 86, [np-1]),
                 si(et, kon, et, [dr(0, dl(0, np, np), np)-1]),
                 si('.', sent, '.', [np-1]),
                 si('87.', int, '87.', [dl(0, s, txt)-1])
               ],
               Result).
sent(566, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(dans, prp, dans, [dr(0, dl(1, s, s), np)-1]),
                 si(le, det:art, le, [dr(0, np, n)-1]),
                 si(monde, nom, monde, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(568, Result) :-
    prob_parse([ si('Il', pro:per, il, [np-1]),
                 si(y, pro:per, y, [cl_y-1]),
                 si(avait, ver:impf, avoir, [dr(0, dl(0, cl_y, dl(0, np, s)), np)-1]),
                 si(plus, adv, plus, [dr(0, dr(0, np, s_q), pp_de)-1]),
                 si('d\'', prp, de, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(que, kon, que, [dr(0, s_q, pp)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ouzbékistan', nam, 'Ouzbékistan', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(570, Result) :-
    prob_parse([ si('Les', det:art, les, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(sont, ver:pres, 'être', [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dr(0, dr(0, np, np), dr(0, np, np))-1]),
                 si(plus, adv, plus, [dr(0, np, s_q)-1]),
                 si(que, kon, que, [dr(0, s_q, np)-1]),
                 si(les, det:art, les, [dr(0, np, n)-1]),
                 si(femmes, nom, femme, [n-1]),
                 si(en, prp, en, [dr(0, dl(1, s, s), n)-1]),
                 si('Ouzbékistan', nam, 'Ouzbékistan', [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(574, Result) :-
    prob_parse([ si('Certains', pro:ind, certain, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(ne, adv, ne, [dr(0, dl(0, np, s), dl(0, np, s))-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(pas, adv, pas, [dr(0, np, pp_de)-1]),
                 si(de, prp, de, [dr(0, pp_de, n)-1]),
                 si(bleu, nom, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(576, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(beige, nom, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(578, Result) :-
    prob_parse([ si('Entre', prp, entre, [dr(0, dr(0, s, s), np)-1]),
                 si(trois, num, trois, [dr(0, np, n)-1]),
                 si(et,
                    kon,
                    et,
                    [dr(0, dl(0, dr(0, np, n), dr(0, np, n)), dr(0, np, n))-1]),
                 si(quatre, num, quatre, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(580, Result) :-
    prob_parse([ si('La', det:art, la, [dr(0, np, n)-1]),
                 si(plupart, nom, plupart, [dr(0, n, pp_de)-1]),
                 si(des, prp:det, des, [dr(0, pp_de, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(bleu, adj, bleu, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).
sent(582, Result) :-
    prob_parse([ si('Au', prp:det, au, [dr(0, dr(0, np, np), n)-1]),
                 si(moins, adv, moins, [n-1]),
                 si(deux, num, deux, [dr(0, np, n)-1]),
                 si(hommes, nom, homme, [n-1]),
                 si(portent, ver:pres, porter, [dr(0, dl(0, np, s), np)-1]),
                 si(du, prp:det, du, [dr(0, np, n)-1]),
                 si(beige, nom, beige, [n-1]),
                 si('.', sent, '.', [dl(0, s, txt)-1])
               ],
               Result).

